"""euler_2.py Problem 2

Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def main():
    count: int = 0
    fibonacci_list: list(int) = [0,1]
    even_fibonacci_list: list(int) = []
    max_number: int = 400000
    even_fibonacci_sum: int = None
    
    while count <= max_number:
        if (count == 0) or (count == 1):
            fibonacci_list.append(count)
        else:
            temp = fibonacci_list[-1] + fibonacci_list[-2]
            fibonacci_list.append(temp)
            if temp % 2 == 0:
                even_fibonacci_list.append(temp)
        count += 1
    else:
        even_fibonacci_sum = sum(even_fibonacci_list)
        print(f"The sum of the even values in the Fibonacci Series is {even_fibonacci_sum}")
            

if __name__ == "__main__":
    main()
